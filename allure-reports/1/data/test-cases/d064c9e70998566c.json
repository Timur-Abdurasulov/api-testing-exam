{"uid":"d064c9e70998566c","name":"Add a new pet to the store in a valid way","fullName":"tests.test_api.TestApi#test_add_new_pet_200","historyId":"843c89f9382ce29ddfa9be27d78a3c68","time":{"start":1704202143951,"stop":1704202146615,"duration":2664},"status":"failed","statusMessage":"AssertionError: assert 415 == 200\n +  where 415 = <Response [415]>.status_code","statusTrace":"self = <test_api.TestApi object at 0x000001D77A4D3490>, api_client = <utils.api_client.ApiClient object at 0x000001D77A4D3950>\n\n    @allure.title(\"Add a new pet to the store in a valid way\")\n    def test_add_new_pet_200(self, api_client):\n        pet = {\n            \"id\": 1,\n            \"category\": {\n                \"id\": 1,\n                \"name\": \"category1\"\n            },\n            \"name\": \"doggie\",\n            \"photoUrls\": [\n                \"https://example.com/pet_photo.jpg\"\n            ],\n            \"tags\": [\n                {\n                    \"id\": 1,\n                    \"name\": \"tag1\"\n                }\n            ],\n            \"status\": \"available\"\n        }\n        response = api_client.post(\"/pet\", pet)\n        print(response)\n        with allure.step(f\"Check status {response.status_code}\"):\n>           assert response.status_code == 200\nE           assert 415 == 200\nE            +  where 415 = <Response [415]>.status_code\n\ntests\\test_api.py:31: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"api_client","time":{"start":1704202143951,"stop":1704202143951,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 415 == 200\n +  where 415 = <Response [415]>.status_code","statusTrace":"self = <test_api.TestApi object at 0x000001D77A4D3490>, api_client = <utils.api_client.ApiClient object at 0x000001D77A4D3950>\n\n    @allure.title(\"Add a new pet to the store in a valid way\")\n    def test_add_new_pet_200(self, api_client):\n        pet = {\n            \"id\": 1,\n            \"category\": {\n                \"id\": 1,\n                \"name\": \"category1\"\n            },\n            \"name\": \"doggie\",\n            \"photoUrls\": [\n                \"https://example.com/pet_photo.jpg\"\n            ],\n            \"tags\": [\n                {\n                    \"id\": 1,\n                    \"name\": \"tag1\"\n                }\n            ],\n            \"status\": \"available\"\n        }\n        response = api_client.post(\"/pet\", pet)\n        print(response)\n        with allure.step(f\"Check status {response.status_code}\"):\n>           assert response.status_code == 200\nE           assert 415 == 200\nE            +  where 415 = <Response [415]>.status_code\n\ntests\\test_api.py:31: AssertionError","steps":[{"name":"Post request to '/pet'","time":{"start":1704202143951,"stop":1704202146615,"duration":2664},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"path","value":"'/pet'"},{"name":"data","value":"{'id': 1, 'category': {'id': 1, 'name': 'category1'}, 'name': 'doggie', 'photoUrls': ['https://example.com/pet_photo.jpg'], 'tags': [{'id': 1, 'name': 'tag1'}], 'status': 'available'}"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Check status 415","time":{"start":1704202146615,"stop":1704202146615,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 415 == 200\n +  where 415 = <Response [415]>.status_code\n","statusTrace":"  File \"D:\\Pycharm_Projects\\Pytest_Exam\\tests\\test_api.py\", line 31, in test_add_new_pet_200\n    assert response.status_code == 200\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[{"uid":"fa07c94c1618ea98","name":"stdout","source":"fa07c94c1618ea98.txt","type":"text/plain","size":17}],"parameters":[],"stepsCount":2,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_api"},{"name":"subSuite","value":"TestApi"},{"name":"host","value":"DESKTOP-323VRMN"},{"name":"thread","value":"1180-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_api"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":2},"items":[{"uid":"2c8fe635311c45eb","status":"failed","statusDetails":"AssertionError: assert 415 == 200\n +  where 415 = <Response [415]>.status_code","time":{"start":1704202143951,"stop":1704202146615,"duration":2664}}]},"tags":[]},"source":"d064c9e70998566c.json","parameterValues":[]}